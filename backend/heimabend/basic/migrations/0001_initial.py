# Generated by Django 3.1.2 on 2021-03-05 19:34

import basic.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(40)])),
                ('description', models.CharField(default='', max_length=8000, validators=[django.core.validators.MinLengthValidator(75), django.core.validators.MaxLengthValidator(8000)])),
                ('isPossibleOutside', models.BooleanField(default=1)),
                ('isPossibleInside', models.BooleanField(default=1)),
                ('material', models.CharField(blank=True, default='', max_length=1000)),
                ('costsRating', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('executionTimeRating', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('isPrepairationNeeded', models.BooleanField(default=1)),
                ('isActive', models.BooleanField(default=0)),
                ('isLvlOne', models.BooleanField(default=1)),
                ('isLvlTwo', models.BooleanField(default=0)),
                ('isPossibleDigital', models.BooleanField(default=0)),
                ('isPossibleAlone', models.BooleanField(default=0)),
                ('isLvlThree', models.BooleanField(default=0)),
                ('imageLink', models.CharField(blank=True, max_length=120, null=True)),
                ('createdBy', models.CharField(blank=True, max_length=60)),
                ('createdByEmail', models.CharField(blank=True, max_length=60)),
                ('updatedBy', models.CharField(blank=True, max_length=60, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(blank=True, null=True)),
                ('like_score', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('age_level', models.IntegerField(null=True)),
                ('group_type', models.IntegerField(null=True)),
                ('group_leader', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('image', stdimage.models.StdImageField(blank=True, upload_to=basic.models.nameFile)),
                ('description', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=60)),
                ('topic', models.CharField(max_length=40)),
                ('messageBody', models.CharField(max_length=1000)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('ordered_id', models.IntegerField(unique=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('is_header', models.BooleanField(default=False)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_event_overview', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('color', models.CharField(max_length=7)),
                ('is_visible', models.BooleanField(default=True)),
                ('ordered_id', models.IntegerField(null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='basic.tagcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('opinionTypeId', models.IntegerField(choices=[(1, 'Like'), (-1, 'Dislike')], default=1)),
                ('like_created', models.DateTimeField(auto_now_add=True)),
                ('eventId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('score', models.IntegerField(null=True)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.event')),
                ('experiment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.experiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='material_list',
            field=models.ManyToManyField(blank=True, to='basic.Material'),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(default='', to='basic.Tag'),
        ),
    ]
